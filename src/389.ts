// 389. Find the Difference
// You are given two strings s and t.
// String t is generated by random shuffling string s and then add one more letter at a random position.
// Return the letter that was added to t.

// Example 1:
// Input: s = "abcd", t = "abcde"
// Output: "e"
// Explanation: 'e' is the letter that was added.

// Example 2:
// Input: s = "", t = "y"
// Output: "y"

// Constraints:
// 0 <= s.length <= 1000
// t.length == s.length + 1
// s and t consist of lowercase English letters.

// The approach uses the acii character code of the lower english letters. We sum up all the character codes in the string t the we minus the all the character codes in the string s. So since it is guaranteed that the letter t has all the characters of s plus another random character, the value that would be left would just be the character code of this randomly added character.
// Complexity
// Time complexity: O(n)
// Space complexity: O(1)

export const findTheDifference = (s: string, t: string): string => {
  let charCode = t.charCodeAt(0)

  for (let i = 0; i < s.length; i++) {
    charCode += t.charCodeAt(i + 1) - s.charCodeAt(i)
  }

  return String.fromCharCode(charCode)
}
